// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestBoardFixEFCoreLib;

#nullable disable

namespace TestBoardFixEFCoreLib.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20231231070309_Init20231231")]
    partial class Init20231231
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestBoardFixEFCoreLib.FixFileData", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("AbnormalBehavior")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AbnormalString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoardName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoardNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FixWay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("boolean");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegisteredPerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartFixDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TestMachineNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TestMachineType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Table_FixFileData", (string)null);
                });

            modelBuilder.Entity("TestBoardFixEFCoreLib.FixedFileData", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("EndFixDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("FixFileDataID")
                        .HasColumnType("bigint");

                    b.Property<string>("FixedMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Other2")
                        .HasColumnType("text");

                    b.Property<string>("RegisteredPerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestingMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("FixFileDataID")
                        .IsUnique();

                    b.ToTable("Table_FixedFileData", (string)null);
                });

            modelBuilder.Entity("TestBoardFixEFCoreLib.FixedFileData", b =>
                {
                    b.HasOne("TestBoardFixEFCoreLib.FixFileData", "FixFileData")
                        .WithOne("FixedFileData")
                        .HasForeignKey("TestBoardFixEFCoreLib.FixedFileData", "FixFileDataID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixFileData");
                });

            modelBuilder.Entity("TestBoardFixEFCoreLib.FixFileData", b =>
                {
                    b.Navigation("FixedFileData");
                });
#pragma warning restore 612, 618
        }
    }
}
